{"ast":null,"code":"import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { cache as sizeCache } from './calculateBoxSize';\n\nvar gatherActiveObservationsAtDepth = function gatherActiveObservationsAtDepth(depth) {\n  sizeCache.clear();\n  resizeObservers.forEach(function processObserver(ro) {\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n    ro.skippedTargets.splice(0, ro.skippedTargets.length);\n    ro.observationTargets.forEach(function processTarget(ot) {\n      if (ot.isActive()) {\n        if (calculateDepthForNode(ot.target) > depth) {\n          ro.activeTargets.push(ot);\n        } else {\n          ro.skippedTargets.push(ot);\n        }\n      }\n    });\n  });\n};\n\nexport { gatherActiveObservationsAtDepth };","map":null,"metadata":{},"sourceType":"module"}