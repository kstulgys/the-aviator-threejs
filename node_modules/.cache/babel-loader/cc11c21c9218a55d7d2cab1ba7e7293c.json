{"ast":null,"code":"import _slicedToArray from \"/Users/karolis/imkarolis/the-aviator-threejs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/karolis/imkarolis/the-aviator-threejs/src/App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport \"./styles.css\";\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hovered = _useState2[0],\n        setHover = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        active = _useState4[0],\n        setActive = _useState4[1]; // Rotate mesh every frame, this is outside of React without overhead\n\n\n  useFrame(() => {\n    mesh.current.rotation.x += 0.01;\n    mesh.current.rotation.y += 0.02;\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({}, props, {\n    ref: mesh // scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n    ,\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    attach: \"geometry\",\n    args: [5, 5, 10, 8, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshPhysicalMaterial\", {\n    attach: \"material\",\n    color: hovered ? \"hotpink\" : \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(Canvas, {\n    camera: {\n      position: [0, 0, 100],\n      isPerspectiveCamera: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/the-aviator-threejs/src/App.js"],"names":["React","useRef","useState","Canvas","useFrame","Box","props","mesh","hovered","setHover","active","setActive","current","rotation","x","y","e","App","position","isPerspectiveCamera"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC;AACA,OAAO,cAAP;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB;AACA,QAAMC,IAAI,GAAGN,MAAM,EAAnB,CAFkB,CAIlB;;AAJkB,oBAKUC,QAAQ,CAAC,KAAD,CALlB;AAAA;AAAA,QAKXM,OALW;AAAA,QAKFC,QALE;;AAAA,qBAMUP,QAAQ,CAAC,KAAD,CANlB;AAAA;AAAA,QAMXQ,MANW;AAAA,QAMHC,SANG,kBAQlB;;;AACAP,EAAAA,QAAQ,CAAC,MAAM;AACbG,IAAAA,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,IAA3B;AACAP,IAAAA,IAAI,CAACK,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,IAA2B,IAA3B;AACD,GAHO,CAAR;AAKA,sBACE,8CACMT,KADN;AAEE,IAAA,GAAG,EAAEC,IAFP,CAGE;AAHF;AAIE,IAAA,OAAO,EAAGS,CAAD,IAAOL,SAAS,CAAC,CAACD,MAAF,CAJ3B;AAKE,IAAA,aAAa,EAAGM,CAAD,IAAOP,QAAQ,CAAC,IAAD,CALhC;AAME,IAAA,YAAY,EAAGO,CAAD,IAAOP,QAAQ,CAAC,KAAD,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQE;AAAkB,IAAA,MAAM,EAAC,UAAzB;AAAoC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,EAAc,CAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD;;AAED,eAAe,SAASS,GAAT,GAAe;AAC5B,sBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAZ;AAAyBC,MAAAA,mBAAmB,EAAE;AAA9C,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport \"./styles.css\";\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    mesh.current.rotation.x += 0.01;\n    mesh.current.rotation.y += 0.02;\n  });\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      // scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(e) => setActive(!active)}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}\n    >\n      <cylinderGeometry attach='geometry' args={[5, 5, 10, 8, 1]} />\n      <meshPhysicalMaterial attach='material' color={hovered ? \"hotpink\" : \"orange\"} />\n    </mesh>\n  );\n}\n\nexport default function App() {\n  return (\n    <Canvas camera={{ position: [0, 0, 100], isPerspectiveCamera: true }}>\n      <ambientLight />\n      {/* <pointLight position={[10, 10, 10]} /> */}\n      {/* <Box position={[-1.2, 0, 0]} /> */}\n      <Box />\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}