{"ast":null,"code":"var _jsxFileName = \"/Users/karolis/imkarolis/the-aviator-threejs/src/App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame, useResource } from \"react-three-fiber\";\nimport \"./styles.css\"; // function Box(props) {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n//   // Rotate mesh every frame, this is outside of React without overhead\n//   useFrame(() => {\n//     mesh.current.rotation.x += 0.01;\n//     mesh.current.rotation.y += 0.02;\n//   });\n//   return (\n//     <mesh ref={mesh} {...props}>\n//       <cylinderGeometry attach='geometry' args={[5, 5, 10, 8, 1]} />\n//       <meshPhongMaterial attach='material' color='pink' />\n//     </mesh>\n//   );\n// }\n// function Lights() {\n//   const [ref, light] = useResource();\n//   return (\n//     <>\n//       <hemisphereLight args={[0xaaaaaa, 0x000000, 0.9]} />\n//       <ambientLight args={[0xdc8874, 0.5]} />\n//       <directionalLight ref={ref} args={[0xffffff, 0.9]} position={[150, 350, 350]} />\n//       {light && <directionalLightHelper args={[light, 1]} />}\n//     </>\n//   );\n// }\n\nexport default function App() {\n  // Rotate mesh every frame, this is outside of React without overhead\n  const mesh = useRef();\n  useFrame(() => {\n    mesh.current.rotation.x += 0.01;\n    mesh.current.rotation.y += 0.02;\n  }); // const [ref, light] = useResource();\n\n  return /*#__PURE__*/React.createElement(Canvas, {\n    camera: {\n      position: [0, 0, 50]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    attach: \"geometry\",\n    args: [5, 5, 10, 8, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meshPhongMaterial\", {\n    attach: \"material\",\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"hemisphereLight\", {\n    args: [0xaaaaaa, 0x000000, 0.9],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    args: [0xdc8874, 0.5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/the-aviator-threejs/src/App.js"],"names":["React","useRef","useState","Canvas","useFrame","useResource","App","mesh","current","rotation","x","y","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,mBAA9C;AACA,OAAO,cAAP,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B;AACA,QAAMC,IAAI,GAAGN,MAAM,EAAnB;AACAG,EAAAA,QAAQ,CAAC,MAAM;AACbG,IAAAA,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,IAA3B;AACAH,IAAAA,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,IAA2B,IAA3B;AACD,GAHO,CAAR,CAH4B,CAO5B;;AAEA,sBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;AAAZ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,GAAG,EAAEL,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAkB,IAAA,MAAM,EAAC,UAAzB;AAAoC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,EAAc,CAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAiB,IAAA,IAAI,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,GAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAc,IAAA,IAAI,EAAE,CAAC,QAAD,EAAW,GAAX,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame, useResource } from \"react-three-fiber\";\nimport \"./styles.css\";\n\n// function Box(props) {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n\n//   // Rotate mesh every frame, this is outside of React without overhead\n//   useFrame(() => {\n//     mesh.current.rotation.x += 0.01;\n//     mesh.current.rotation.y += 0.02;\n//   });\n\n//   return (\n//     <mesh ref={mesh} {...props}>\n//       <cylinderGeometry attach='geometry' args={[5, 5, 10, 8, 1]} />\n//       <meshPhongMaterial attach='material' color='pink' />\n//     </mesh>\n//   );\n// }\n\n// function Lights() {\n//   const [ref, light] = useResource();\n\n//   return (\n//     <>\n//       <hemisphereLight args={[0xaaaaaa, 0x000000, 0.9]} />\n//       <ambientLight args={[0xdc8874, 0.5]} />\n//       <directionalLight ref={ref} args={[0xffffff, 0.9]} position={[150, 350, 350]} />\n//       {light && <directionalLightHelper args={[light, 1]} />}\n//     </>\n//   );\n// }\n\nexport default function App() {\n  // Rotate mesh every frame, this is outside of React without overhead\n  const mesh = useRef();\n  useFrame(() => {\n    mesh.current.rotation.x += 0.01;\n    mesh.current.rotation.y += 0.02;\n  });\n  // const [ref, light] = useResource();\n\n  return (\n    <Canvas camera={{ position: [0, 0, 50] }}>\n      <mesh ref={mesh}>\n        <cylinderGeometry attach='geometry' args={[5, 5, 10, 8, 1]} />\n        <meshPhongMaterial attach='material' color='pink' />\n      </mesh>\n      <hemisphereLight args={[0xaaaaaa, 0x000000, 0.9]} />\n      <ambientLight args={[0xdc8874, 0.5]} />\n      {/* <directionalLight args={[0xffffff, 0.9]} position={[150, 350, 350]} /> */}\n      {/* {light && <directionalLightHelper args={[light, 1]} />} */}\n      {/* <Lights /> */}\n    </Canvas>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}